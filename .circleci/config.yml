version: 2
jobs:
  coverage:
    docker:
      - image: ubuntu:latest
    steps:
      - run: apt update && apt install git curl build-essential ninja-build meson lcov gcovr libgtest-dev -y
      - checkout
      - run: meson -Db_coverage=true build.cov
      - run: cd build.cov && ninja
      - run: cd build.cov && ninja test
      - run: cd build.cov && ninja coverage-xml
      - run: bash <(curl -s https://codecov.io/bash)
      - store_artifacts:
          path: build.cov/build.cov/meson-logs/coverage.xml
          prefix: coverage
      - store_artifacts:
          path: build.cov/meson-logs

  gcc:
    docker:
      - image: ubuntu:latest
    steps:
      - run: apt update && apt install git build-essential ninja-build meson libgtest-dev libbenchmark-dev -y
      - checkout
      - run: meson build --warnlevel 3 --werror --prefix=/opt/libmvc
      - run: cd build && ninja
      - run: cd build && ninja test
      - run: cd build && ninja benchmark
      # install and run standalone solvers
      - run: cd build && ninja install
      - run: /opt/libmvc/bin/NuMVC-standalone data/frb30-15-mis/frb30-15-1.mis 420 100
      - run: /opt/libmvc/bin/FastVC-standalone data/frb30-15-mis/frb30-15-1.mis 420 100
      - run: /opt/libmvc/bin/NuMVC-parallel-standalone data/frb30-15-mis/frb30-15-1.mis 420 100
      - run: /opt/libmvc/bin/FastVC-parallel-standalone data/frb30-15-mis/frb30-15-1.mis 420 100
      - store_artifacts:
          path: build/meson-logs

  clang:
    docker:
      - image: ubuntu:latest
    steps:
      - run: apt update && apt install git clang ninja-build meson libgtest-dev libbenchmark-dev -y
      - checkout
      - run: CXX=clang++ meson build --warnlevel 3 --werror
      - run: cd build && ninja
      - run: cd build && ninja test
      - run: cd build && ninja benchmark
      - store_artifacts:
          path: build/meson-logs

workflows:
  version: 2
  build_and_test:
    jobs:
      - coverage
      - gcc
      - clang

